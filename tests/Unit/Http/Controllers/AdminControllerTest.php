<?php

namespace Tests\Unit\Http\Controllers;

use App\Http\Controllers\AdminController;
use App\Models\Booking;
use App\Models\Hotel;
use App\Repositories\Contracts\HotelRepositoryInterface;
use Illuminate\Http\Request;
use Tests\TestCase;
use Mockery as m;

class AdminControllerTest extends TestCase
{
    protected $hotelMock;
    protected $adminController;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->hotelMock = m::mock(HotelRepositoryInterface::class);
        $this->adminController = new AdminController(
            $this->hotelMock,
        );
    }

    public function testIndex()
    {
        $this->hotelMock->shouldReceive('paginateList')->with(config('user.number_of_hotel'), [], ['province']);
        $result = $this->adminController->index();
        $data = $result->getData();
        $this->assertIsArray($data);
        $this->assertEquals('cms.pages.admin.index', $result->getName());
        $this->assertArrayHasKey('hotels', $data);
    }

    public function testUploadWithNotFoundHotel()
    {
        $hotel = Hotel::factory()->make();
        $request = new Request();
        $request->status = config('user.approved_number');
        $this->hotelMock->shouldReceive('find')->andReturn($hotel);
        $this->hotelMock->shouldReceive('update');
        $result = $this->adminController->upload($request, $id=1);
        $this->assertEquals(route('admin.index'), $result->getTargetUrl());
    }


    public function testUpload()
    {
        $request = new Request();
        $request->status = config('user.approved_number');
        $this->hotelMock->shouldReceive('find');
        $this->hotelMock->shouldReceive('update');
        $result = $this->adminController->upload($request, $id=1);
        $this->assertEquals(route('admin.index'), $result->getTargetUrl());
    }

    public function testDeny()
    {
        $request = new Request();
        $request->status = config('user.approved_number');
        $hotel = Hotel::factory()->make();
        $this->hotelMock->shouldReceive('find')->andReturn($hotel);
        $this->hotelMock->shouldReceive('update');
        $result = $this->adminController->deny($request, $id=1);
        $this->assertEquals(route('admin.index'), $result->getTargetUrl());
    }

    public function testDenyWithoutHotel()
    {
        $request = new Request();
        $request->status = config('user.approved_number');
        $this->hotelMock->shouldReceive('find');
        $this->hotelMock->shouldReceive('update');
        $result = $this->adminController->deny($request, $id=1);
        $this->assertEquals(route('admin.index'), $result->getTargetUrl());
    }

    protected function tearDown(): void
    {
        m::close();
        unset($this->hotelMock);
        parent::tearDown(); // TODO: Change the autogenerated stub
    }
}
